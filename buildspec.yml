####################################################################
# Overview: this is the buildspec.yml YAML file used
#           by AWS CodeBuild to build the docker image
#           for the Customer Profile API App
#           after the image is built, it is pushed to AWS ECR Repo
# license:
#    name: MIT
#    url: https://opensource.org/licenses/MIT
###################################################################

version: 0.2

env:
  variables:
    E2_REPO_NAME: "customer-profile-repo"
  parameter-store:
    E2_IMAGE_REPO_NAME: "/CodeBuild/EARTH2_IMAGE_REPO_NAME"
    E2_IMAGE_TAG: "/CodeBuild/EARTH2_IMAGE_TAG"
    E2_ECS_SERVICE_CONTAINER_NAME: "/CodeBuild/EARTH2_ECS_SERVICE_CONTAINER_NAME"
    E2_AWS_ACCOUNT_ID: "/CodeBuild/EARTH2_AWS_ACCOUNT_ID"
    E2_AWS_ECR_REGION: "/CodeBuild/EARTH2_AWS_ECR_REGION"
phases:
  install:
    commands:
      - echo linux version ...
      - lsb_release -a
      - echo change directory to app ...
      - echo Installing npm
      - curl -sL https://deb.nodesource.com/setup_8.x | bash -
      - apt-get install nodejs
      - node -v
      - npm -v
      - printenv
  pre_build:
    commands:
      - echo install dependencies and running unit test cases
      - pwd && cd app && npm install
      - echo "------------------------ Unit Test Cases -----------------------"
      - npm test && cd ..
      - echo "------------------------ End of Unit Test Cases ----------------"
      - echo Logging in to Amazon ECR...
      - echo $E2_AWS_ECR_REGION
      - $(aws ecr get-login --no-include-email --region $E2_AWS_ECR_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image $E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG ...          
      - docker build -t $E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG .
      - docker tag $E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG $E2_AWS_ACCOUNT_ID.dkr.ecr.$E2_AWS_ECR_REGION.amazonaws.com/$E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG   
      - echo Define a task for the app in ECS
      - E2_RESULT=$(aws ecs list-task-definitions  --region $E2_AWS_ECR_REGION --family-prefix run-customer-profile-repo|grep task|wc -l)
      - echo $E2_RESULT
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to $E2_AWS_ACCOUNT_ID $E2_AWS_ECR_REGION ...
      - docker push $E2_AWS_ACCOUNT_ID.dkr.ecr.$E2_AWS_ECR_REGION.amazonaws.com/$E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $E2_ECS_SERVICE_CONTAINER_NAME $E2_AWS_ACCOUNT_ID.dkr.ecr.$E2_AWS_ECR_REGION.amazonaws.com/$E2_IMAGE_REPO_NAME:$E2_IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
# cache node_modules on S3 to speedup the build process
cache:
  paths:
#    - 'app/node_modules/**/*'
